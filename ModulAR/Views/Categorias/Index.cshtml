@using X.PagedList.Mvc.Core

@model X.PagedList.IPagedList<ModulAR.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

<h1>Categorías</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Descripcion
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@*PAGINACION!*@
<div class="pagination justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">&lt;</a>
                    </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
            }

            @if (Model.HasNextPage)
            {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">&gt;</a>
                    </li>
            }
        </ul>
    </nav>
</div>

