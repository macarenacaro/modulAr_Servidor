@using X.PagedList.Mvc.Core

@model X.PagedList.IPagedList<ModulAR.Models.Producto>

@{
    ViewData["Title"] = "Index";
}

<h1>Productos</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>

@* BUSQUEDAS *@
<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="form-inline">
            <div class="form-group" style="display:flex; flex-direction:row">
                <input type="text" name="searchString" value="@ViewBag.CurrentFilter" placeholder="Buscar por descripción, ID o precio" class="form-control" />
                <button type="submit" class="btn btn-primary" style="margin-left:15px">Buscar</button>
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
               Id
            </th>
            <th>
               Descripción
            </th>
            <th>
                Texto
            </th>
           @* <th>
                @Html.DisplayNameFor(model => model.Precio)
                        </th> *@
            <th>
                Precio
            </th>
            <th>
               Stock
            </th>
            <th>
                Escaparate
            </th>
            <th>
                Imagen
            </th>
            <th>
                Categoría
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Texto)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.PrecioCadena)
                </td>

            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                <div class="si-no-display">
                @if (item.Escaparate == true) {
                  <span class="si">Sí  </span>
                   <input type="radio" value="true" checked="@item.Escaparate" readonly="readonly" disabled />

                } else {
                    <span class="no">No  </span>
                   <input type="radio" value="false" disabled />
                }
            </div>
            </td>
            <td>
                    <img src="~/imagenes/@item.Imagen" class="imagen-redondeada" width="50" height="50" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categoria.Descripcion)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                    @* <a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                    <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a> |
                <a asp-action="CambiarImagen" asp-route-id="@item.Id">Cambiar Imagen</a>
            </td>
        </tr>
}
    </tbody>
</table>

@*PAGINACION!*@
<div class="pagination justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">&lt;</a>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">&gt;</a>
                </li>
            }
        </ul>
    </nav>
</div>
